"program token_for_new_coin.aleo;\n\nrecord token:\n    owner as address.private;\n    amount as u64.private;\n\nmapping account:\n    key as address.public;\n    value as u64.public;\n\nfunction mint_public:\n    input r0 as address.public;\n    input r1 as u64.public;\n    async mint_public r0 r1 into r2;\n    output r2 as token_for_new_coin.aleo/mint_public.future;\n\nfinalize mint_public:\n    input r0 as address.public;\n    input r1 as u64.public;\n    get.or_use account[r0] 0u64 into r2;\n    add r2 r1 into r3;\n    set r3 into account[r0];\n\nfunction mint_private:\n    input r0 as address.private;\n    input r1 as u64.private;\n    cast r0 r1 into r2 as token.record;\n    output r2 as token.record;\n\nfunction transfer_public:\n    input r0 as address.public;\n    input r1 as u64.public;\n    async transfer_public self.caller r0 r1 into r2;\n    output r2 as token_for_new_coin.aleo/transfer_public.future;\n\nfinalize transfer_public:\n    input r0 as address.public;\n    input r1 as address.public;\n    input r2 as u64.public;\n    get.or_use account[r0] 0u64 into r3;\n    sub r3 r2 into r4;\n    set r4 into account[r0];\n    get.or_use account[r1] 0u64 into r5;\n    add r5 r2 into r6;\n    set r6 into account[r1];\n\nfunction transfer_private:\n    input r0 as token.record;\n    input r1 as address.private;\n    input r2 as u64.private;\n    sub r0.amount r2 into r3;\n    cast r0.owner r3 into r4 as token.record;\n    cast r1 r2 into r5 as token.record;\n    output r4 as token.record;\n    output r5 as token.record;\n\nfunction transfer_private_to_public:\n    input r0 as token.record;\n    input r1 as address.public;\n    input r2 as u64.public;\n    sub r0.amount r2 into r3;\n    cast r0.owner r3 into r4 as token.record;\n    async transfer_private_to_public r1 r2 into r5;\n    output r4 as token.record;\n    output r5 as token_for_new_coin.aleo/transfer_private_to_public.future;\n\nfinalize transfer_private_to_public:\n    input r0 as address.public;\n    input r1 as u64.public;\n    get.or_use account[r0] 0u64 into r2;\n    add r2 r1 into r3;\n    set r3 into account[r0];\n\nfunction transfer_public_to_private:\n    input r0 as address.public;\n    input r1 as u64.public;\n    cast r0 r1 into r2 as token.record;\n    async transfer_public_to_private self.caller r1 into r3;\n    output r2 as token.record;\n    output r3 as token_for_new_coin.aleo/transfer_public_to_private.future;\n\nfinalize transfer_public_to_private:\n    input r0 as address.public;\n    input r1 as u64.public;\n    get.or_use account[r0] 0u64 into r2;\n    sub r2 r1 into r3;\n    set r3 into account[r0];\n"